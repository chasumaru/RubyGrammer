



バックトレース

• プログラム実行からエラー発生までのメソッド呼び出し履歴
- 下に行くほどエラーから遠い呼び出しとなる


printデバッグ

• p, puts などで変数の中身を調べる
• 条件分岐などで、意図した挙動になっているか、メッセージを挿入して調べる
- デバッグ後に削除


tapメソッドによるメソッドチェーンのデバッグ

• tap{} ...ブロックパラメータにレシーバーを渡す
- レシーバー自身が戻り値になる


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
'943c78'.scan(/\w\w/).tap{ |rgb| puts rgb }.map(&:hex)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



デバッグ情報の出力

例) logger.debug “[Debug] info.name: #{info.name}”


デバッガ(debug.gem)







